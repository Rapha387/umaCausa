<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>